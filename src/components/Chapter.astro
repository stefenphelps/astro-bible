---
interface Props {
	book: string;
	chapterNumber: string;
	verses: Record<string, string>;
}

const { book, chapterNumber, verses } = Astro.props;
const entries = Object.entries(verses); // [["1", "In the beginning..."], ["2", "The earth..."], ...]
---
<section class='chapter' id={`chapter-${chapterNumber}`}>
	<h2>Chapter {chapterNumber}</h2>
	<nav>
		<ul>
			{entries.map(([verseNum], index) => (
				<>
				{index % 10 === 0 && (
					<li>
						<a href={`#chapter-${chapterNumber}-verse-${verseNum}`}>
							{verseNum}-{parseInt(verseNum) + 9 > entries.length ? entries.length : parseInt(verseNum) + 9}
						</a>
					</li>
				)}
				</>
			))}
		</ul>
	</nav>
	{entries.map(([verseNum, text], index) => (
		<p id={`chapter-${chapterNumber}-verse-${verseNum}`} tabindex="0" data-book={book} data-chapter={chapterNumber} data-verse={verseNum}>
			{verseNum !== "1" && <sup>{verseNum}&nbsp;</sup>}
			<span>{text}</span>
		</p>
	))}
</section>

<script>
	import Snackbar from "node-snackbar";

	const verses = document.querySelectorAll(".chapter p");
	
	verses.forEach(function (verse) {
		verse.addEventListener("click", async function () {
			const shareData = {
				title: `${verse.dataset.book} ${verse.dataset.chapter}:${verse.dataset.verse}`,
				text: verse.querySelector('span').textContent,
				url: `https://astro-bible.netlify.app/share/?book=${encodeURIComponent(verse.dataset.book)}&chapter=${verse.dataset.chapter}&verse=${verse.dataset.verse}#${verse.id}`,
			};
			if (!navigator.canShare) {
				navigator.clipboard.writeText(shareData.url).then(function () {
					Snackbar.show({
						actionTextColor: "var(--accent)",
						text: "Copied link to verse."
					});
				});
			} else {
				try {
					await navigator.share(shareData);
					Snackbar.show({
						actionTextColor: "var(--accent)",
						text: "Verse shared successfully."
					});
				} catch (error) {
					console.log(error)
				}
			}
		});
	});
</script>

<style lang="scss">
	.chapter {
		scroll-margin-top: 3.5em;
		nav {
			ul {
				display: flex;
				flex-wrap: wrap;
				gap: 1rem;
				margin: 1rem 0;
			}
			li {
				font-size: 12px;
			}
		}
		h2 {
			margin: 3rem 0 0 0;
		}
		p {
			position: relative;
			scroll-margin-top: 3.5em;
			&:hover,
			&:focus {
				outline: 0 none;
				text-decoration-line: underline;
				text-decoration-style: solid;
				text-decoration-thickness: 6px;
				text-decoration-color: var(--accent);
				text-decoration-skip-ink: none;
			}
			&:first-of-type {
				margin-top: 5rem;
				&::first-letter {
					font-size: var(--step-5);
					line-height: 0;
					font-weight: 200;
					margin-right: 5px;
				}
			}
		}
	}
</style>